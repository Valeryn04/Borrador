/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ventanaagroclientes.vista.Pedido;

import com.mycompany.ventanaagroclientes.modelos.ItemPedido;
import com.mycompany.ventanaagroclientes.modelos.Pedido;
import com.mycompany.ventanaagroclientes.modelos.Producto;
import com.mycompany.ventanaagroclientes.repositorio.RepositorioPedido;
import com.mycompany.ventanaagroclientes.repositorio.RepositorioProducto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Andrés M
 */
public class JFrameCrearPedido extends javax.swing.JFrame {

    private List<ItemPedido> itemsPedido = new ArrayList<>();

    /**
     * Creates new form JFrameCrearPedido
     */
    public JFrameCrearPedido() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonCrearPedido = new javax.swing.JButton();
        jButtonVolver = new javax.swing.JButton();
        jTextFieldNumOrden = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldComprador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jButtonAñadirProducto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Crear Pedido");

        jLabel2.setText("Número de orden");

        jLabel3.setText("Productos");

        jButtonCrearPedido.setText("Crear Pedido");
        jButtonCrearPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearPedidoActionPerformed(evt);
            }
        });

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre del comprador");

        jLabel5.setText("Total");

        jButtonAñadirProducto.setText("Agregar Producto");
        jButtonAñadirProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCrearPedido)
                                .addGap(61, 61, 61)
                                .addComponent(jButtonVolver))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(jButtonAñadirProducto))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(117, 117, 117)
                                .addComponent(jTextFieldTotal))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldComprador))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(49, 49, 49)
                                .addComponent(jTextFieldNumOrden)))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNumOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButtonAñadirProducto))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCrearPedido)
                    .addComponent(jButtonVolver))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAñadirProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirProductoActionPerformed
        List<Producto> disponibles = RepositorioProducto.obtenerTodos();

        if (disponibles.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay productos disponibles.");
            return;
        }

        // Mostrar opciones con nombres
        String[] nombres = disponibles.stream()
                .map(p -> p.getIdProducto() + " - " + p.getNombre() + " ($" + p.getPrecio() + ")")
                .toArray(String[]::new);

        String seleccionado = (String) JOptionPane.showInputDialog(
                this,
                "Seleccione un producto",
                "Agregar producto",
                JOptionPane.PLAIN_MESSAGE,
                null,
                nombres,
                nombres[0]
        );

        if (seleccionado != null) {
            int idSeleccionado = Integer.parseInt(seleccionado.split(" - ")[0]);

            Producto productoElegido = disponibles.stream()
                    .filter(p -> p.getIdProducto() == idSeleccionado)
                    .findFirst()
                    .orElse(null);

            if (productoElegido != null) {
                String inputCantidad = JOptionPane.showInputDialog(this, "Ingrese la cantidad:");

                try {
                    int cantidad = Integer.parseInt(inputCantidad);
                    if (cantidad <= 0) {
                        JOptionPane.showMessageDialog(this, "La cantidad debe ser mayor que cero.");
                        return;
                    }

                    // Crear item del pedido
                    ItemPedido item = new ItemPedido(productoElegido, cantidad);
                    itemsPedido.add(item);

                    actualizarTotal();

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Cantidad inválida.");
                }
            }
        }
    }//GEN-LAST:event_jButtonAñadirProductoActionPerformed

    private void jButtonCrearPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearPedidoActionPerformed
        crearPedido();
    }//GEN-LAST:event_jButtonCrearPedidoActionPerformed

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void actualizarTotal() {
        float total = 0f;
        for (ItemPedido item : itemsPedido) {
            total += item.getSubtotal();
        }
        jTextFieldTotal.setText(String.valueOf(total));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCrearPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCrearPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCrearPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCrearPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameCrearPedido().setVisible(true);
            }
        });
    }

    private void crearPedido() {
        try {
            long numeroOrden = Long.parseLong(jTextFieldNumOrden.getText());
            String nombreComprador = jTextFieldComprador.getText();
            String cedulaComprador = JOptionPane.showInputDialog(this, "Ingrese la cédula del comprador:");

            if (nombreComprador.isEmpty() || cedulaComprador == null || cedulaComprador.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe completar los datos del comprador.");
                return;
            }

            if (itemsPedido.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe agregar al menos un producto.");
                return;
            }

            float total = 0f;
            for (ItemPedido item : itemsPedido) {
                total += item.getSubtotal();
            }

            jTextFieldTotal.setText(String.valueOf(total));

            Pedido.Comprador comprador = new Pedido.Comprador(nombreComprador, cedulaComprador);
            Pedido nuevoPedido = new Pedido(0, numeroOrden, comprador, itemsPedido);

            RepositorioPedido.agregarPedido(nuevoPedido);

            JOptionPane.showMessageDialog(this, "Pedido creado exitosamente.");
            limpiarCampos();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Número de orden inválido.");
        }
    }

    private void limpiarCampos() {
        jTextFieldNumOrden.setText("");
        jTextFieldComprador.setText("");
        jTextFieldTotal.setText("");
        itemsPedido.clear();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAñadirProducto;
    private javax.swing.JButton jButtonCrearPedido;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextFieldComprador;
    private javax.swing.JTextField jTextFieldNumOrden;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables
}
